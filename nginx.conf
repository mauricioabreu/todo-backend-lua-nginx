worker_processes auto;

events {
  worker_connections 512;
}

env SITE_URL;

http {
  lua_shared_dict items 1m;

  init_by_lua_block {
    todo = require("todoapp.api.todo")
    json = require("rxi-json-lua")
    cors = require("lib.resty.cors")

    cors.allow_host([==[localhost]==])
    cors.allow_host([==[.*\.todobackend\.com]==])
    cors.allow_method('GET')
    cors.allow_method('POST')
    cors.allow_method('PATCH')
    cors.allow_method('DELETE')
    cors.expose_header('Content-Type')
    cors.allow_header('Content-Type')
    cors.max_age(7200)
    cors.allow_credentials(false)
  }

  header_filter_by_lua_block {
    cors.run()
  }

  server {
    listen 80;

    set_by_lua_block $site_url {
      return os.getenv("SITE_URL")
    }

    location ~ /todos/(?<uid>[a-zA-Z0-9-]+)$ {
      access_by_lua_block {
        local method = ngx.req.get_method()
        if method == "DELETE" then
          todo.delete(ngx.var.uid, ngx.shared.items)
          ngx.status = ngx.HTTP_NO_CONTENT
          ngx.say("")
        end
        if method == "GET" then
          local item = todo.get(ngx.var.uid, ngx.shared.items)
          ngx.say(item)
        end
        if method == "PATCH" then
          ngx.req.read_body()
          local data = ngx.req.get_body_data()
          local item = todo.get(ngx.var.uid, ngx.shared.items)
          if item == nil then
            ngx.status = 404
            ngx.say("")
            return
          end
          local item = todo.update(ngx.var.uid, json.decode(item), json.decode(data), ngx.shared.items)
          ngx.say(item)
        end
        if method == "OPTIONS" then
          ngx.status = 204
          ngx.say("")
        end
      }
    }

    location /todos {
      access_by_lua_block {
        local method = ngx.req.get_method()
        if method == "POST" then
          ngx.req.read_body()
          local data = ngx.req.get_body_data()
          local item = todo.create(json.decode(data), ngx.shared.items)
          ngx.say(item)
        end
        if method == "GET" then
          local list = todo.list(ngx.shared.items)
          ngx.say(list)
        end
        if method == "DELETE" then
          todo.flush(ngx.shared.items)
          ngx.status = 204
          ngx.say("")
        end
        if method == "OPTIONS" then
          ngx.status = 204
          ngx.say("")
        end
      }
    }

    location = /flush {
      access_by_lua_block {
        todo.flush(ngx.shared.items)
        ngx.say("FLUSHED")
      }
    }
  }
}